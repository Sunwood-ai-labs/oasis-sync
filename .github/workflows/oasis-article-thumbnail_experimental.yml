name: "üß™ Oasis Article + Thumbnail Intake (Experimental)"

on:
  issues:
    types: [opened, edited, reopened]

permissions:
  contents: write
  issues: write

jobs:
  ensure_labels:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure experimental labels exist
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -euo pipefail
          REPO="${{ github.repository }}"
          ensure_label() {
            local label="$1"
            local color="$2"
            local description="$3"
            if ! gh label list --repo "$REPO" --limit 1000 | awk -F'\t' '{print $1}' | grep -Fxq "$label"; then
              gh label create "$label" --repo "$REPO" --color "$color" --description "$description"
            fi
          }
          ensure_label "oasis-article" "2E7D32" "Trigger Oasis article ingestion"
          ensure_label "oasis-article-thumbnail-experimental" "1D72B8" "Experimental: ingest article & thumbnail together"

  ingest:
    needs: ensure_labels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Save issue body
        run: |
          cat <<'EOF' > issue_body.md
          ${{ github.event.issue.body }}
          EOF

      - name: Post start progress comment
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          gh issue comment "${ISSUE_NUMBER}" --body "‚öôÔ∏è „Çµ„É†„Éç„Ç§„É´„Å®Ë®ò‰∫ã„ÅÆÂèñ„ÇäËæº„Åø„ÇíÈñãÂßã„Åó„Åæ„Åô‚Ä¶"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ingestion dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pillow requests pyyaml

      - name: Ingest thumbnail assets
        id: thumb
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          python .github/scripts/ingest_thumbnail_issue.py \
            --issue-number "${{ github.event.issue.number }}" \
            --issue-title "${{ github.event.issue.title }}" \
            --issue-body-path issue_body.md \
            --repo "${{ github.repository }}" \
            --default-branch "${{ github.event.repository.default_branch }}"

      - name: Ingest Oasis article
        id: article
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          python .github/scripts/ingest_oasis_issue.py \
            --issue-number "${{ github.event.issue.number }}" \
            --issue-title "${{ github.event.issue.title }}" \
            --issue-body-path issue_body.md \
            --oasis-dir articles/oasis \
            --images-root generated-images \
            --header-image-path "${{ steps.thumb.outputs.primary_saved_file }}" \
            --repo "${{ github.repository }}" \
            --default-branch "${{ github.event.repository.default_branch }}"

      - name: Post article progress comment
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ARTICLE_PATH: ${{ steps.article.outputs.article_path }}
          ARTICLE_SLUG: ${{ steps.article.outputs.slug }}
        run: |
          set -euo pipefail
          if [[ -n "${ARTICLE_SLUG}" ]]; then
            BODY=$(printf 'üìù Ë®ò‰∫ãÁîüÊàê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü: `%s`\nSlug: `%s`\n' "${ARTICLE_PATH}" "${ARTICLE_SLUG}")
          else
            BODY=$(printf 'üìù Ë®ò‰∫ãÁîüÊàê„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü: `%s`\n' "${ARTICLE_PATH}")
          fi
          gh issue comment "${ISSUE_NUMBER}" --body "${BODY}"

      - name: Commit generated files
        id: commit
        env:
          DEST_DIR: ${{ steps.thumb.outputs.dest_dir }}
        run: |
          set -euo pipefail
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          if [[ -d "articles/oasis" ]]; then
            git add articles/oasis
          fi
          if [[ -d "generated-images" ]]; then
            git add generated-images
          fi
          if [[ -n "${DEST_DIR:-}" && -d "${DEST_DIR}" ]]; then
            git add "${DEST_DIR}"
          fi

          if git diff --cached --quiet; then
            echo "commit_performed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          git commit -m "üß™ Add experimental Oasis article & thumbnail from issue #${{ github.event.issue.number }}"
          git push origin HEAD:"${{ github.event.repository.default_branch }}"
          echo "commit_performed=true" >> "$GITHUB_OUTPUT"

      - name: Build combined comment
        id: comment_body
        env:
          SAVED_FILES: ${{ steps.thumb.outputs.saved_files }}
          ARTICLE_PATH: ${{ steps.article.outputs.article_path }}
          ARTICLE_IMAGE_URL: ${{ steps.article.outputs.image_url }}
          ARTICLE_IMAGE_PATH: ${{ steps.article.outputs.image_path }}
          COMMIT_PERFORMED: ${{ steps.commit.outputs.commit_performed }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        run: |
          python .github/scripts/write_oasis_article_thumbnail_comment.py comment.md

      - name: Comment and close issue
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          set -euo pipefail
          gh issue comment "${ISSUE_NUMBER}" --body-file comment.md
          gh issue close "${ISSUE_NUMBER}"

      - name: Comment on failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          set -euo pipefail
          gh issue comment "${ISSUE_NUMBER}" --body "‚ö†Ô∏è Experimental OasisË®ò‰∫ã„Å®„Çµ„É†„Éç„Ç§„É´„ÅÆËá™ÂãïÁôªÈå≤„Åß„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇActions „ÅÆ„É≠„Ç∞„Çí„ÅîÁ¢∫Ë™ç„Åè„Å†„Åï„ÅÑ„ÄÇ"
